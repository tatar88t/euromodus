$columns: 12;
$atom: (100% / $columns);

$break_xs: 20rem;
$break_sm: 36rem;
$break_md: 48rem;
$break_lg: 62rem;
$break_xl: 75rem;

$offset: 1.875rem;
$offset_xs: $offset;
$offset_sm: $offset;
$offset_md: $offset;
$offset_lg: $offset;
$offset_xl: $offset;

$offset_one_side: ($offset / 2);
$offset_xs_one_side: ($offset_xs / 2);
$offset_sm_one_side: ($offset_sm / 2);
$offset_md_one_side: ($offset_md / 2);
$offset_lg_one_side: ($offset_lg / 2);
$offset_xl_one_side: ($offset_xl / 2);

$fields: 0.9375rem;

@mixin container-full() {
    padding-left: $fields;
    padding-right: $fields;
}

@mixin row-offsets() {
    margin-left: ($offset_one_side * -1);
    margin-right: ($offset_one_side * -1);
}

@mixin col-offsets($type) {
    #{$type}-left: $offset_one_side;
    #{$type}-right: $offset_one_side;
}

@mixin container() {
    @include container-full();
    max-width: 1280px;
    margin: 0 auto;
}

@mixin row-flex() {
    @include row-offsets();
    display: flex;
    flex-wrap: wrap;
}

@mixin row-float() {
    @include row-offsets();
    @include clearfix();
}

@mixin row-ib() {
    @include row-offsets();
}

@mixin col() {
    @include col-offsets(margin);
    box-sizing: border-box;
    word-wrap: break-word;
}

@mixin col-float() {
    float: left;
}

@mixin col-ib() {
    display: inline-block;
    vertical-align: top;
}

@mixin col-padding() {
    @include col-offsets(padding);
    word-wrap: break-word;
}

@mixin size($n) {
    width: #{calc(#{$val} - #{$offset})};
    $val: 100% / $columns * $n;
}

@mixin size-xs($n) {
    @include xs(width, #{calc(#{$val} - #{$offset_xs})});
    $val: 100% / $columns * $n;
}

@mixin size-sm($n) {
    @include sm(width, #{calc(#{$val} - #{$offset_sm})});
    $val: 100% / $columns * $n;
}

@mixin size-md($n) {
    @include md(width, #{calc(#{$val} - #{$offset_md})});
    $val: 100% / $columns * $n;
}

@mixin size-lg($n) {
    @include lg(width, #{calc(#{$val} - #{$offset_lg})});
    $val: 100% / $columns * $n;
}

@mixin size-xl($n) {
    @include xl(width, #{calc(#{$val} - #{$offset_xl})});
    $val: 100% / $columns * $n;
}

@mixin shift($n) {
    margin-left: #{calc(#{$val} + #{$offset_one_side})};
    margin-right: #{calc(#{$val} + #{$offset_one_side})};
    $val: 100% / $columns * $n;
}

@mixin shift-left($n) {
    margin-left: #{calc(#{$val} + #{$offset_one_side})};
    $val: 100% / $columns * $n;
}

@mixin shift-right($n) {
    margin-right: #{calc(#{$val} + #{$offset_one_side})};
    $val: 100% / $columns * $n;
}

@mixin shift-padding($n) {
    padding-left: #{calc(#{$val} + #{$offset_one_side})};
    padding-right: #{calc(#{$val} + #{$offset_one_side})};
    $val: 100% / $columns * $n;
}

@mixin shift-padding-left($n) {
    padding-left: #{calc(#{$val} + #{$offset_one_side})};
    $val: 100% / $columns * $n;
}

@mixin shift-padding-right($n) {
    padding-right: #{calc(#{$val} + #{$offset_one_side})};
    $val: 100% / $columns * $n;
}

@mixin shift-xs($n) {
    @include xs(margin-left, #{calc(#{$val} + #{$offset_xs_one_side})});
    @include xs(margin-right, #{calc(#{$val} + #{$offset_xs_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xs-left($n) {
    @include xs(margin-left, #{calc(#{$val} + #{$offset_xs_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xs-right($n) {
    @include xs(margin-right, #{calc(#{$val} + #{$offset_xs_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xs-padding($n) {
    @include xs(padding-left, #{calc(#{$val} + #{$offset_xs_one_side})});
    @include xs(padding-right, #{calc(#{$val} + #{$offset_xs_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xs-padding-left($n) {
    @include xs(padding-left, #{calc(#{$val} + #{$offset_xs_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xs-padding-right($n) {
    @include xs(padding-right, #{calc(#{$val} + #{$offset_xs_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-sm($n) {
    @include sm(margin-left, #{calc(#{$val} + #{$offset_sm_one_side})});
    @include sm(margin-right, #{calc(#{$val} + #{$offset_sm_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-sm-left($n) {
    @include sm(margin-left, #{calc(#{$val} + #{$offset_sm_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-sm-right($n) {
    @include sm(margin-right, #{calc(#{$val} + #{$offset_sm_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-sm-padding($n) {
    @include sm(padding-left, #{calc(#{$val} + #{$offset_sm_one_side})});
    @include sm(padding-right, #{calc(#{$val} + #{$offset_sm_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-sm-padding-left($n) {
    @include sm(padding-left, #{calc(#{$val} + #{$offset_sm_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-sm-padding-right($n) {
    @include sm(padding-right, #{calc(#{$val} + #{$offset_sm_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-md($n) {
    @include md(margin-left, #{calc(#{$val} + #{$offset_md_one_side})});
    @include md(margin-right, #{calc(#{$val} + #{$offset_md_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-md-left($n) {
    @include md(margin-left, #{calc(#{$val} + #{$offset_md_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-md-right($n) {
    @include md(margin-right, #{calc(#{$val} + #{$offset_md_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-md-padding($n) {
    @include md(padding-left, #{calc(#{$val} + #{$offset_md_one_side})});
    @include md(padding-right, #{calc(#{$val} + #{$offset_md_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-md-padding-left($n) {
    @include md(padding-left, #{calc(#{$val} + #{$offset_md_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-md-padding-right($n) {
    @include md(padding-right, #{calc(#{$val} + #{$offset_md_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-lg($n) {
    @include lg(margin-left, #{calc(#{$val} + #{$offset_lg_one_side})});
    @include lg(margin-right, #{calc(#{$val} + #{$offset_lg_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-lg-left($n) {
    @include lg(margin-left, #{calc(#{$val} + #{$offset_lg_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-lg-right($n) {
    @include lg(margin-right, #{calc(#{$val} + #{$offset_lg_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-lg-padding($n) {
    @include lg(padding-left, #{calc(#{$val} + #{$offset_lg_one_side})});
    @include lg(padding-right, #{calc(#{$val} + #{$offset_lg_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-lg-padding-left($n) {
    @include lg(padding-left, #{calc(#{$val} + #{$offset_lg_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-lg-padding-right($n) {
    @include lg(padding-right, #{calc(#{$val} + #{$offset_lg_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xl($n) {
    @include xl(margin-left, #{calc(#{$val} + #{$offset_xl_one_side})});
    @include xl(margin-right, #{calc(#{$val} + #{$offset_xl_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xl-left($n) {
    @include xl(margin-left, #{calc(#{$val} + #{$offset_xl_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xl-right($n) {
    @include xl(margin-right, #{calc(#{$val} + #{$offset_xl_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xl-padding($n) {
    @include xl(padding-left, #{calc(#{$val} + #{$offset_xl_one_side})});
    @include xl(padding-right, #{calc(#{$val} + #{$offset_xl_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xl-padding-left($n) {
    @include xl(padding-left, #{calc(#{$val} + #{$offset_xl_one_side})});
    $val: 100% / $columns * $n;
}

@mixin shift-xl-padding-right($n) {
    @include xl(padding-right, #{calc(#{$val} + #{$offset_xl_one_side})});
    $val: 100% / $columns * $n;
}

@mixin xs($name, $value) {
    @media screen and (min-width: $break_xs) {
        #{$name}: $value;
    }
}

@mixin xs-block() {
    @media screen and (min-width: $break_xs) {
        @content;
    }
}

@mixin sm($name, $value) {
    @media screen and (min-width: $break_sm) {
        #{$name}: $value;
    }
}

@mixin sm-block() {
    @media screen and (min-width: $break_sm) {
        @content;
    }
}

@mixin md($name, $value) {
    @media screen and (min-width: $break_md) {
        #{$name}: $value;
    }
}

@mixin md-block() {
    @media screen and (min-width: $break_md) {
        @content;
    }
}

@mixin lg($name, $value) {
    @media screen and (min-width: $break_lg) {
        #{$name}: $value;
    }
}

@mixin lg-block() {
    @media screen and (min-width: $break_lg) {
        @content;
    }
}

@mixin xl($name, $value) {
    @media screen and (min-width: $break_xl) {
        #{$name}: $value;
    }
}

@mixin xl-block() {
    @media screen and (min-width: $break_xl) {
        @content;
    }
}

@mixin from($min_width) {
    @media screen and (min-width: $min_width) {
        @content;
    }
}

@mixin to($max_width) {
    @media screen and (max-width: $max_width) {
        @content;
    }
}

@mixin from-to($min_width, $max_width) {
    @media screen and (min-width: $min_width) and (max-width: $max_width) {
        @content;
    }
}

@mixin u-row-flex($offset) {
    display: flex;
    flex-wrap: wrap;
    margin-left: ($offset / -2);
    margin-right: ($offset / -2);
}

@mixin u-col($offset) {
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: ($offset / 2);
    margin-right: ($offset / 2);
}

@mixin u-size($n, $columns, $offset) {
    width: #{calc(100% / #{$columns} * #{$n} - #{$offset})};
}

@mixin reset() {
    body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
        margin: 0;
        padding: 0;
    }
    table {
        border-collapse: collapse;
        border-spacing: 0;
    }
    fieldset, img, abbr {
        border: 0;
    }
    address, caption, cite, code, dfn, em, strong, th, var {
        font-style: normal;
        font-weight: normal;
    }
    ul li {
        list-style: none;
    }
    caption, th {
        text-align: left;
    }
    h1, h2, h3, h4, h5, h6 {
        font-size: 100%;
        font-weight: normal;
    }
    sup {
        vertical-align: text-top;
    }
    sub {
        vertical-align: text-bottom;
    }
    input, textarea, select {
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
    }
    legend {
        color: #000;
    }
    article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
        display: block;
    }
    img {
        max-width: 100%;
        height: auto;
    }
}

@mixin debug($background, $outline) {
    position: fixed;
    width: 100%;
    height: 100vh;
    
    > div {
        @include container();
        height: inherit;
        
        > div {
            @include row-flex();
            height: inherit;
            
            > div {
                @include col();
                @include size(1);
                height: inherit;
                outline: $outline;
                background: $background;
            }
        }
    }
}

@mixin clearfix() {
    &::after {
        content: "";
        display: block;
        clear: both;
    }
}